Joueur string nom, (List<Personnage>)

choix : - mettre dans la base de données les différents personnages en fonction de leur type (personnagecac, personnageDistant, personnageHeal)
BDD -> tous les personnages, un attribut type (personnagecac, personnageDistant, personnageHeal). la classe personnagecac va chercher dans la bdd les personnages ayant pour attribut personnagecac.

Base de données : niveau , (stuff)

CaseEffectStrategy peut avoir les strategy fire et ice par exemple et lorsque le personnage passe dessus où est dessus au moment de l'effet, celui-ci va s'appliquer
CharacterEffectStrategy va avoir les strategy fire et ice egalement mais ici l'effet va s'appliquer durant un laps de temps sur le personnage

Main 
contient tout

Question à poser : 

Qu'est-ce qui est plus propre : implements runnable, Thread thread = new Thread(new maclassRunnable()) ou extends Thread?

Comment marche le modèle MVC? 
    Soit : model -> interaction BDD
           vue -> contient la map et l'affichage
           
    Soit : model -> interaction BDD et la map (case[][]) observable
           vue -> uniquement les éléments d'affichable observer
           controleur -> gestion entre les deux



Comment gérer l'alternance attaque et déplacement?
    Soit un appel a move et attaque toutes les x ms, move se déplace de x pixels et attaque attaque si un ennemie est a distance.
    Soit un appel a move qui va se déplacer tant qu'il ne trouve pas d'ennemie, quand il a trouver, return et appel à attaque qui va lancer une attaque sur l'ennemie tant que celui ci est vivant..





